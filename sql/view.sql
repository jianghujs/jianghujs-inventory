
-- ----------------------------
-- View structure for dept
-- ----------------------------
DROP VIEW IF EXISTS `dept`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `dept` AS select `fs_wms_basic`.`dept`.`id` AS `id`,`fs_wms_basic`.`dept`.`idSequence` AS `idSequence`,`fs_wms_basic`.`dept`.`deptId` AS `deptId`,`fs_wms_basic`.`dept`.`deptName` AS `deptName`,`fs_wms_basic`.`dept`.`deptContact` AS `deptContact`,`fs_wms_basic`.`dept`.`deptManagerName` AS `deptManagerName`,`fs_wms_basic`.`dept`.`deptManagerContact` AS `deptManagerContact`,`fs_wms_basic`.`dept`.`remark` AS `remark`,`fs_wms_basic`.`dept`.`rowStatus` AS `rowStatus`,`fs_wms_basic`.`dept`.`operation` AS `operation`,`fs_wms_basic`.`dept`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`dept`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`dept`.`operationAt` AS `operationAt` from `fs_wms_basic`.`dept`;

-- ----------------------------
-- View structure for good
-- ----------------------------
DROP VIEW IF EXISTS `good`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `good` AS select `fs_wms_basic`.`good`.`id` AS `id`,`fs_wms_basic`.`good`.`idSequence` AS `idSequence`,`fs_wms_basic`.`good`.`goodId` AS `goodId`,`fs_wms_basic`.`good`.`goodName` AS `goodName`,`fs_wms_basic`.`good`.`goodDesc` AS `goodDesc`,`fs_wms_basic`.`good`.`goodType` AS `goodType`,`fs_wms_basic`.`good`.`goodUnit` AS `goodUnit`,`fs_wms_basic`.`good`.`goodCategory` AS `goodCategory`,`fs_wms_basic`.`good`.`goodSuggestPrice` AS `goodSuggestPrice`,`fs_wms_basic`.`good`.`assetExtend` AS `assetExtend`,`fs_wms_basic`.`good`.`rowStatus` AS `rowStatus`,`fs_wms_basic`.`good`.`operation` AS `operation`,`fs_wms_basic`.`good`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`good`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`good`.`operationAt` AS `operationAt` from `fs_wms_basic`.`good`;

-- ----------------------------
-- View structure for supplier
-- ----------------------------
DROP VIEW IF EXISTS `supplier`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `supplier` AS select `fs_wms_basic`.`supplier`.`id` AS `id`,`fs_wms_basic`.`supplier`.`idSequence` AS `idSequence`,`fs_wms_basic`.`supplier`.`supplierId` AS `supplierId`,`fs_wms_basic`.`supplier`.`supplierName` AS `supplierName`,`fs_wms_basic`.`supplier`.`supplierType` AS `supplierType`,`fs_wms_basic`.`supplier`.`supplierAddress` AS `supplierAddress`,`fs_wms_basic`.`supplier`.`supplierHome` AS `supplierHome`,`fs_wms_basic`.`supplier`.`supplierPerson1` AS `supplierPerson1`,`fs_wms_basic`.`supplier`.`supplierContact1` AS `supplierContact1`,`fs_wms_basic`.`supplier`.`supplierPerson2` AS `supplierPerson2`,`fs_wms_basic`.`supplier`.`supplierContact2` AS `supplierContact2`,`fs_wms_basic`.`supplier`.`remark` AS `remark`,`fs_wms_basic`.`supplier`.`rowStatus` AS `rowStatus`,`fs_wms_basic`.`supplier`.`operation` AS `operation`,`fs_wms_basic`.`supplier`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`supplier`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`supplier`.`operationAt` AS `operationAt` from `fs_wms_basic`.`supplier`;

-- ----------------------------
-- View structure for user_dept
-- ----------------------------
DROP VIEW IF EXISTS `user_dept`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `user_dept` AS select `fs_wms_basic`.`user_dept`.`id` AS `id`,`fs_wms_basic`.`user_dept`.`userId` AS `userId`,`fs_wms_basic`.`user_dept`.`deptId` AS `deptId`,`fs_wms_basic`.`user_dept`.`roleName` AS `roleName`,`fs_wms_basic`.`user_dept`.`operation` AS `operation`,`fs_wms_basic`.`user_dept`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`user_dept`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`user_dept`.`operationAt` AS `operationAt` from `fs_wms_basic`.`user_dept`;

-- ----------------------------
-- View structure for view01_good_history_price
-- ----------------------------
DROP VIEW IF EXISTS `view01_good_history_price`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_good_history_price` AS select `fs_wms_basic`.`supplier_good_price_history`.`id` AS `id`,`fs_wms_basic`.`supplier_good_price_history`.`supplierId` AS `supplierId`,`fs_wms_basic`.`supplier_good_price_history`.`goodId` AS `goodId`,`fs_wms_basic`.`supplier_good_price_history`.`goodPrice` AS `goodPrice`,`fs_wms_basic`.`supplier_good_price_history`.`remark` AS `remark`,`fs_wms_basic`.`supplier_good_price_history`.`operation` AS `operation`,`fs_wms_basic`.`supplier_good_price_history`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`supplier_good_price_history`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`supplier_good_price_history`.`operationAt` AS `operationAt` from `fs_wms_basic`.`supplier_good_price_history`;

-- ----------------------------
-- View structure for view01_good_of_supplier_count
-- ----------------------------
DROP VIEW IF EXISTS `view01_good_of_supplier_count`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_good_of_supplier_count` AS select `fs_wms_basic`.`good`.`goodId` AS `goodId`,count(`fs_wms_basic`.`supplier_good`.`supplierId`) AS `supplierCount` from (`fs_wms_basic`.`good` left join `fs_wms_basic`.`supplier_good` on((`fs_wms_basic`.`good`.`goodId` = `fs_wms_basic`.`supplier_good`.`goodId`))) group by `fs_wms_basic`.`good`.`goodId`;

-- ----------------------------
-- View structure for view01_good_price_stock
-- ----------------------------
DROP VIEW IF EXISTS `view01_good_price_stock`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_good_price_stock` AS select `fs_wms_basic`.`good`.`id` AS `id`,`fs_wms_basic`.`good`.`goodId` AS `goodId`,`fs_wms_basic`.`good`.`goodName` AS `goodName`,`fs_wms_basic`.`good`.`goodDesc` AS `goodDesc`,`fs_wms_basic`.`good`.`goodType` AS `goodType`,`fs_wms_basic`.`good`.`goodUnit` AS `goodUnit`,`fs_wms_basic`.`good`.`operation` AS `operation`,`fs_wms_basic`.`good`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`good`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`good`.`operationAt` AS `operationAt`,ifnull(`fs_wms_warehouse`.`good_store`.`storeCount`,0) AS `storeCount`,`fs_wms_basic`.`good`.`goodCategory` AS `goodCategory`,`fs_wms_basic`.`good`.`rowStatus` AS `rowStatus`,`fs_wms_basic`.`good`.`goodSuggestPrice` AS `goodSuggestPrice` from (`fs_wms_basic`.`good` left join `fs_wms_warehouse`.`good_store` on((`fs_wms_basic`.`good`.`goodId` = `fs_wms_warehouse`.`good_store`.`goodId`)));

-- ----------------------------
-- View structure for view01_purchase_order
-- ----------------------------
DROP VIEW IF EXISTS `view01_purchase_order`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_purchase_order` AS select `purchase_order`.`id` AS `id`,`purchase_order`.`idSequence` AS `idSequence`,`purchase_order`.`purchaseOrderId` AS `purchaseOrderId`,`purchase_order`.`purchaseTitle` AS `purchaseTitle`,`purchase_order`.`purchaseRequirerId` AS `purchaseRequirerId`,`purchase_order`.`purchaseRequirerName` AS `purchaseRequirerName`,`purchase_order`.`purchaseDeptId` AS `purchaseDeptId`,`purchase_order`.`purchaseDeptName` AS `purchaseDeptName`,`purchase_order`.`purchaseOrderPrice` AS `purchaseOrderPrice`,`purchase_order`.`workflowId` AS `workflowId`,`workflow`.`workflowName` AS `workflowName`,`purchase_order`.`workflowTaskId` AS `workflowTaskId`,`purchase_order`.`purchasePurchaserId` AS `purchasePurchaserId`,`purchase_order`.`purchasePurchaserName` AS `purchasePurchaserName`,`purchase_order`.`purchaseApprovalrId1` AS `purchaseApprovalrId1`,`purchase_order`.`purchaseApprovalrName1` AS `purchaseApprovalrName1`,`purchase_order`.`purchaseApprovalrId2` AS `purchaseApprovalrId2`,`purchase_order`.`purchaseApprovalrName2` AS `purchaseApprovalrName2`,`purchase_order`.`purchaseApprovalrId3` AS `purchaseApprovalrId3`,`purchase_order`.`purchaseApprovalrName3` AS `purchaseApprovalrName3`,`purchase_order`.`purchaseStatus` AS `purchaseStatus`,`purchase_order`.`isAllStore` AS `isAllStore`,`purchase_order`.`remark` AS `remark`,`purchase_order`.`finishAt` AS `finishAt`,`purchase_order`.`workflowConfigCustom` AS `workflowConfigCustom`,`purchase_order`.`operation` AS `operation`,`purchase_order`.`operationByUserId` AS `operationByUserId`,`purchase_order`.`operationByUser` AS `operationByUser`,`purchase_order`.`operationAt` AS `operationAt`,`purchase_order`.`applyAt` AS `applyAt` from (`purchase_order` join `workflow` on((`purchase_order`.`workflowId` = `workflow`.`workflowId`)));

-- ----------------------------
-- View structure for view01_purchase_order_good
-- ----------------------------
DROP VIEW IF EXISTS `view01_purchase_order_good`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_purchase_order_good` AS select `fs_wms_purchase`.`purchase_order_good`.`id` AS `id`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderGoodId` AS `purchaseOrderGoodId`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderId` AS `purchaseOrderId`,`fs_wms_purchase`.`purchase_order`.`purchaseStatus` AS `purchaseStatus`,`fs_wms_purchase`.`purchase_order`.`isAllStore` AS `isAllStore`,`fs_wms_purchase`.`purchase_order_good`.`supplierId` AS `supplierId`,`fs_wms_purchase`.`purchase_order_good`.`goodId` AS `goodId`,`fs_wms_purchase`.`purchase_order_good`.`goodName` AS `goodName`,`fs_wms_purchase`.`purchase_order_good`.`goodUnit` AS `goodUnit`,`fs_wms_purchase`.`purchase_order_good`.`goodPrice` AS `goodPrice`,`fs_wms_purchase`.`purchase_order_good`.`goodCount` AS `goodCount`,`fs_wms_purchase`.`purchase_order_good`.`storeCount` AS `storeCount`,`fs_wms_purchase`.`purchase_order_good`.`storeBatchCount` AS `storeBatchCount`,`fs_wms_purchase`.`purchase_order_good`.`remark` AS `remark`,`fs_wms_purchase`.`purchase_order_good`.`rowStatus` AS `rowStatus`,`fs_wms_purchase`.`purchase_order_good`.`operation` AS `operation`,`fs_wms_purchase`.`purchase_order_good`.`operationByUserId` AS `operationByUserId`,`fs_wms_purchase`.`purchase_order_good`.`operationByUser` AS `operationByUser`,`fs_wms_purchase`.`purchase_order_good`.`operationAt` AS `operationAt`,`fs_wms_purchase`.`purchase_order`.`finishAt` AS `finishAt`,`fs_wms_purchase`.`purchase_order`.`purchaseDeptId` AS `purchaseDeptId`,`supplier`.`supplierName` AS `supplierName`,`fs_wms_purchase`.`purchase_order_good`.`filledByUser` AS `filledByUser`,`fs_wms_purchase`.`purchase_order_good`.`filledByUserId` AS `filledByUserId` from ((`fs_wms_purchase`.`purchase_order_good` left join `fs_wms_purchase`.`purchase_order` on((`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderId` = `fs_wms_purchase`.`purchase_order`.`purchaseOrderId`))) left join `fs_wms_purchase`.`supplier` on((`fs_wms_purchase`.`purchase_order_good`.`supplierId` = `supplier`.`supplierId`)));

-- ----------------------------
-- View structure for view01_purchase_order_good_store
-- ----------------------------
DROP VIEW IF EXISTS `view01_purchase_order_good_store`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_purchase_order_good_store` AS select `fs_wms_warehouse`.`good_store`.`storeCount` AS `storeCount`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderGoodId` AS `purchaseOrderGoodId`,`fs_wms_purchase`.`purchase_order_good`.`id` AS `id`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderId` AS `purchaseOrderId`,`fs_wms_purchase`.`purchase_order_good`.`supplierId` AS `supplierId`,`fs_wms_purchase`.`purchase_order_good`.`goodId` AS `goodId`,`fs_wms_purchase`.`purchase_order_good`.`goodName` AS `goodName`,`fs_wms_purchase`.`purchase_order_good`.`goodPrice` AS `goodPrice`,`fs_wms_purchase`.`purchase_order_good`.`goodUnit` AS `goodUnit`,`fs_wms_purchase`.`purchase_order_good`.`goodCount` AS `goodCount`,`fs_wms_purchase`.`purchase_order_good`.`remark` AS `remark`,`fs_wms_purchase`.`purchase_order_good`.`rowStatus` AS `rowStatus`,`fs_wms_purchase`.`purchase_order_good`.`operation` AS `operation`,`fs_wms_purchase`.`purchase_order_good`.`operationByUserId` AS `operationByUserId`,`fs_wms_purchase`.`purchase_order_good`.`operationByUser` AS `operationByUser`,`fs_wms_purchase`.`purchase_order_good`.`operationAt` AS `operationAt`,`supplier`.`supplierName` AS `supplierName`,`good`.`goodType` AS `goodType`,`good`.`goodCategory` AS `goodCategory`,`good`.`goodSuggestPrice` AS `goodSuggestPrice` from (((`fs_wms_purchase`.`purchase_order_good` left join `fs_wms_warehouse`.`good_store` on((`fs_wms_purchase`.`purchase_order_good`.`goodId` = `fs_wms_warehouse`.`good_store`.`goodId`))) left join `fs_wms_purchase`.`supplier` on((`fs_wms_purchase`.`purchase_order_good`.`supplierId` = `supplier`.`supplierId`))) left join `fs_wms_purchase`.`good` on((`fs_wms_purchase`.`purchase_order_good`.`goodId` = `good`.`goodId`)));

-- ----------------------------
-- View structure for view01_supplier_good
-- ----------------------------
DROP VIEW IF EXISTS `view01_supplier_good`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_supplier_good` AS select `fs_wms_basic`.`supplier_good`.`id` AS `id`,`fs_wms_basic`.`supplier_good`.`supplierId` AS `supplierId`,`fs_wms_basic`.`supplier`.`supplierName` AS `supplierName`,`fs_wms_basic`.`supplier_good`.`goodId` AS `goodId`,`fs_wms_basic`.`good`.`goodName` AS `goodName`,`fs_wms_basic`.`good`.`goodDesc` AS `goodDesc`,`fs_wms_basic`.`supplier_good`.`goodPriceRecent` AS `goodPriceRecent`,`fs_wms_basic`.`supplier_good`.`remark` AS `remark`,`fs_wms_basic`.`supplier_good`.`operation` AS `operation`,`fs_wms_basic`.`supplier_good`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`supplier_good`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`supplier_good`.`operationAt` AS `operationAt` from ((`fs_wms_basic`.`supplier_good` left join `fs_wms_basic`.`supplier` on((`fs_wms_basic`.`supplier_good`.`supplierId` = `fs_wms_basic`.`supplier`.`supplierId`))) left join `fs_wms_basic`.`good` on((`fs_wms_basic`.`supplier_good`.`goodId` = `fs_wms_basic`.`good`.`goodId`)));

-- ----------------------------
-- View structure for view01_task
-- ----------------------------
DROP VIEW IF EXISTS `view01_task`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_task` AS select `task`.`id` AS `id`,`task`.`taskId` AS `taskId`,`task`.`taskTitle` AS `taskTitle`,`task`.`taskStatus` AS `taskStatus`,`task`.`taskFormInput` AS `taskFormInput`,`task`.`taskConfigId` AS `taskConfigId`,`task`.`taskLineTypeList` AS `taskLineTypeList`,`task`.`taskNextConfigList` AS `taskNextConfigList`,`task`.`taskInitUser` AS `taskInitUser`,`task`.`taskEditUserList` AS `taskEditUserList`,`task`.`taskEditedUserList` AS `taskEditedUserList`,`task`.`taskViewUserList` AS `taskViewUserList`,`task`.`workflowConfig` AS `workflowConfig`,`task`.`createByUser` AS `createByUser`,`task`.`operation` AS `operation`,`task`.`operationByUserId` AS `operationByUserId`,`task`.`operationByUser` AS `operationByUser`,`task`.`operationAt` AS `operationAt`,`purchase_order`.`purchaseOrderId` AS `purchaseOrderId`,`purchase_order`.`purchaseTitle` AS `purchaseTitle`,`purchase_order`.`purchaseRequirerId` AS `purchaseRequirerId`,`purchase_order`.`purchaseRequirerName` AS `purchaseRequirerName`,`purchase_order`.`purchaseDeptId` AS `purchaseDeptId`,`purchase_order`.`purchaseDeptName` AS `purchaseDeptName`,`purchase_order`.`purchaseOrderPrice` AS `purchaseOrderPrice`,`purchase_order`.`purchaseStatus` AS `purchaseStatus`,`purchase_order`.`isAllStore` AS `isAllStore`,`purchase_order`.`finishAt` AS `finishAt`,`purchase_order`.`applyAt` AS `applyAt`,`purchase_order`.`purchasePurchaserName` AS `purchasePurchaserName`,`purchase_order`.`purchasePurchaserId` AS `purchasePurchaserId` from (`task` left join `purchase_order` on((`task`.`taskId` = `purchase_order`.`workflowTaskId`)));

-- ----------------------------
-- View structure for view01_user_dept
-- ----------------------------
DROP VIEW IF EXISTS `view01_user_dept`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view01_user_dept` AS select `user_dept`.`userId` AS `userId`,`_user`.`username` AS `username`,`user_dept`.`deptId` AS `deptId`,`user_dept`.`roleName` AS `roleName`,`user_dept`.`operation` AS `operation`,`user_dept`.`operationByUserId` AS `operationByUserId`,`user_dept`.`operationByUser` AS `operationByUser`,`user_dept`.`operationAt` AS `operationAt`,`user_dept`.`id` AS `id`,`dept`.`deptName` AS `deptName` from ((`fs_wms_purchase`.`user_dept` join `fs_wms_purchase`.`_view01_user` `_user` on((`user_dept`.`userId` = `_user`.`userId`))) join `fs_wms_purchase`.`dept` on((`user_dept`.`deptId` = `dept`.`deptId`)));

-- ----------------------------
-- View structure for view02_good_price_stock
-- ----------------------------
DROP VIEW IF EXISTS `view02_good_price_stock`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view02_good_price_stock` AS select `fs_wms_basic`.`good`.`id` AS `id`,`fs_wms_basic`.`good`.`goodId` AS `goodId`,`fs_wms_basic`.`good`.`goodName` AS `goodName`,`fs_wms_basic`.`good`.`goodDesc` AS `goodDesc`,`fs_wms_basic`.`good`.`goodType` AS `goodType`,`fs_wms_basic`.`good`.`goodUnit` AS `goodUnit`,`fs_wms_basic`.`good`.`operation` AS `operation`,`fs_wms_basic`.`good`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`good`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`good`.`operationAt` AS `operationAt`,ifnull(`fs_wms_warehouse`.`good_store`.`storeCount`,0) AS `storeCount`,`fs_wms_basic`.`good`.`goodCategory` AS `goodCategory`,`fs_wms_basic`.`good`.`rowStatus` AS `rowStatus`,`fs_wms_basic`.`good`.`goodSuggestPrice` AS `goodSuggestPrice`,`gosc`.`supplierCount` AS `supplierCount` from ((`fs_wms_basic`.`good` left join `fs_wms_warehouse`.`good_store` on((`fs_wms_basic`.`good`.`goodId` = `fs_wms_warehouse`.`good_store`.`goodId`))) left join `fs_wms_purchase`.`view01_good_of_supplier_count` `gosc` on((`fs_wms_basic`.`good`.`goodId` = `gosc`.`goodId`)));

-- ----------------------------
-- View structure for view02_purchase_order_good_store
-- ----------------------------
DROP VIEW IF EXISTS `view02_purchase_order_good_store`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view02_purchase_order_good_store` AS select `fs_wms_warehouse`.`good_store`.`storeCount` AS `storeCount`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderGoodId` AS `purchaseOrderGoodId`,`fs_wms_purchase`.`purchase_order_good`.`id` AS `id`,`fs_wms_purchase`.`purchase_order_good`.`purchaseOrderId` AS `purchaseOrderId`,`fs_wms_purchase`.`purchase_order_good`.`supplierId` AS `supplierId`,`fs_wms_purchase`.`purchase_order_good`.`goodId` AS `goodId`,`fs_wms_purchase`.`purchase_order_good`.`goodName` AS `goodName`,`fs_wms_purchase`.`purchase_order_good`.`goodPrice` AS `goodPrice`,`fs_wms_purchase`.`purchase_order_good`.`goodUnit` AS `goodUnit`,`fs_wms_purchase`.`purchase_order_good`.`goodCount` AS `goodCount`,`fs_wms_purchase`.`purchase_order_good`.`remark` AS `remark`,`fs_wms_purchase`.`purchase_order_good`.`rowStatus` AS `rowStatus`,`fs_wms_purchase`.`purchase_order_good`.`operation` AS `operation`,`fs_wms_purchase`.`purchase_order_good`.`operationByUserId` AS `operationByUserId`,`fs_wms_purchase`.`purchase_order_good`.`operationByUser` AS `operationByUser`,`fs_wms_purchase`.`purchase_order_good`.`operationAt` AS `operationAt`,`supplier`.`supplierName` AS `supplierName`,`good`.`goodType` AS `goodType`,`good`.`goodCategory` AS `goodCategory`,`good`.`goodSuggestPrice` AS `goodSuggestPrice`,`gosc`.`supplierCount` AS `supplierCount` from ((((`fs_wms_purchase`.`purchase_order_good` left join `fs_wms_warehouse`.`good_store` on((`fs_wms_purchase`.`purchase_order_good`.`goodId` = `fs_wms_warehouse`.`good_store`.`goodId`))) left join `fs_wms_purchase`.`supplier` on((`fs_wms_purchase`.`purchase_order_good`.`supplierId` = `supplier`.`supplierId`))) left join `fs_wms_purchase`.`good` on((`fs_wms_purchase`.`purchase_order_good`.`goodId` = `good`.`goodId`))) left join `fs_wms_purchase`.`view01_good_of_supplier_count` `gosc` on((`fs_wms_purchase`.`purchase_order_good`.`goodId` = `gosc`.`goodId`)));

-- ----------------------------
-- View structure for _view01_user
-- ----------------------------
DROP VIEW IF EXISTS `_view01_user`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `_view01_user` AS select `fs_wms_basic`.`_user`.`id` AS `id`,`fs_wms_basic`.`_user`.`idSequence` AS `idSequence`,`fs_wms_basic`.`_user`.`userId` AS `userId`,`fs_wms_basic`.`_user`.`username` AS `username`,`fs_wms_basic`.`_user`.`clearTextPassword` AS `clearTextPassword`,`fs_wms_basic`.`_user`.`password` AS `password`,`fs_wms_basic`.`_user`.`md5Salt` AS `md5Salt`,`fs_wms_basic`.`_user`.`userStatus` AS `userStatus`,`fs_wms_basic`.`_user`.`userType` AS `userType`,`fs_wms_basic`.`_user`.`userConfig` AS `userConfig`,`fs_wms_basic`.`_user`.`operation` AS `operation`,`fs_wms_basic`.`_user`.`operationByUserId` AS `operationByUserId`,`fs_wms_basic`.`_user`.`operationByUser` AS `operationByUser`,`fs_wms_basic`.`_user`.`operationAt` AS `operationAt` from `fs_wms_basic`.`_user`;

SET FOREIGN_KEY_CHECKS = 1;